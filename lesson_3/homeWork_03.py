# Задание №1
# Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

def my_func(x, y):
    try:
        z = x / y
        return z
    except ZeroDivisionError:
        return "Неверно! Делитель не может быть равен 0"
    except ValueError:
        return "Необходимо ввести число"


print(my_func(int(input("Введите x = ")), int(input("Введите y = "))))


# Задание №2
# Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы.
# Реализовать вывод данных о пользователе одной строкой.

def my_func(name, surname, byear, city, email, phone):
    user = name + " " + surname + " " + str(byear) + " " + city + " " + email + " " + phone
    print(user)


my_func(name='John', surname='Nilson', byear=1985, city='NY', email='nilson@gmail.com', phone='+39065203218')


# Задание №3
# Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму наибольших двух аргументов.

def my_func(x, y, z):
    argument = [x, y, z]
    total = []
    max_1 = max(argument)
    total.append(max_1)
    argument.remove(max_1)
    max_2 = max(argument)
    total.append(max_2)
    print(sum(total))


my_func(10, 7, 11)


# Задание №4
# Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.

def my_func(x, y):
    # return x ** y
    return x ** abs(y)


print(my_func(6, -3))


# Задание №5
# Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter. Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.


def func():
    result = 0
    while True:
        line = input("Введите число, либо символ @ для завершения ")
        tokens = line.split(" ")
        for token in tokens:
            try:
                number = float(token)
                result += number
            except:
                if token == '@':
                    print(f"Ваша сумма равна {result}. Программа завершена")
                    exit(0)
                else:
                    print(f"Ваша сумма равна {result}. Ошибка ввода")
                    exit(1)
        print(result)


func()


# Задание №6
# Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом. Каждое слово состоит из латинских букв в нижнем регистре.
# Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().

# 1 Вариант
def int_func(text):
    return text.title()


# print(int_func("привет друг"))

# 2 Вариант
def my_int_func(text):
    string_word = text.split(' ')
    total = ''
    for i in string_word:
        total = total + " " + int_func(i)
    return total


print(my_int_func("hello friend"))
